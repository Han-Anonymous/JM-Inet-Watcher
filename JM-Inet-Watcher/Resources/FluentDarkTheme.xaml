<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Color Palette -->
    <Color x:Key="PrimaryBackgroundColor">#0D1117</Color>
    <Color x:Key="SecondaryBackgroundColor">#161B22</Color>
    <Color x:Key="SurfaceColor">#21262D</Color>
    <Color x:Key="ElevatedSurfaceColor">#30363D</Color>
    <Color x:Key="AccentPrimaryColor">#58A6FF</Color>
    <Color x:Key="AccentSecondaryColor">#F78166</Color>
    <Color x:Key="SuccessColor">#3FB950</Color>
    <Color x:Key="WarningColor">#D29922</Color>
    <Color x:Key="ErrorColor">#F85149</Color>
    <Color x:Key="TextPrimaryColor">#F0F6FC</Color>
    <Color x:Key="TextSecondaryColor">#8B949E</Color>
    <Color x:Key="TextTertiaryColor">#6E7681</Color>
    <Color x:Key="BorderColor">#30363D</Color>
    <Color x:Key="HoverOverlayColor">#FFFFFF</Color>
    <Color x:Key="PressOverlayColor">#000000</Color>
    
    <!-- Overlay Brushes with Transparency -->
    <SolidColorBrush x:Key="HoverOverlayBrush" Color="White" Opacity="0.06"/>
    <SolidColorBrush x:Key="PressOverlayBrush" Color="Black" Opacity="0.12"/>

    <!-- Solid Color Brushes -->
    <SolidColorBrush x:Key="PrimaryBackgroundBrush" Color="{StaticResource PrimaryBackgroundColor}"/>
    <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="{StaticResource SecondaryBackgroundColor}"/>
    <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
    <SolidColorBrush x:Key="ElevatedSurfaceBrush" Color="{StaticResource ElevatedSurfaceColor}"/>
    <SolidColorBrush x:Key="AccentPrimaryBrush" Color="{StaticResource AccentPrimaryColor}"/>
    <SolidColorBrush x:Key="AccentSecondaryBrush" Color="{StaticResource AccentSecondaryColor}"/>
    <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}"/>
    <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningColor}"/>
    <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource ErrorColor}"/>
    <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimaryColor}"/>
    <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondaryColor}"/>
    <SolidColorBrush x:Key="TextTertiaryBrush" Color="{StaticResource TextTertiaryColor}"/>
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>

    <!-- Gradient Brushes -->
    <LinearGradientBrush x:Key="AcrylicBackgroundBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#1A21262D" Offset="0"/>
        <GradientStop Color="#2A161B22" Offset="0.5"/>
        <GradientStop Color="#1A0D1117" Offset="1"/>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="GlowBrush" Center="0.5,0.5" RadiusX="1" RadiusY="1">
        <GradientStop Color="#4058A6FF" Offset="0"/>
        <GradientStop Color="#1058A6FF" Offset="0.7"/>
        <GradientStop Color="#0058A6FF" Offset="1"/>
    </RadialGradientBrush>

    <!-- Typography Styles -->
    <Style x:Key="DisplayTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable Display, Segoe UI"/>
        <Setter Property="FontSize" Value="48"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="LineHeight" Value="56"/>
    </Style>

    <Style x:Key="Heading1TextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable Display, Segoe UI"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="LineHeight" Value="44"/>
    </Style>

    <Style x:Key="Heading2TextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable Text, Segoe UI"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="LineHeight" Value="36"/>
    </Style>

    <Style x:Key="BodyLargeTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable Text, Segoe UI"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="LineHeight" Value="24"/>
    </Style>

    <Style x:Key="BodyTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable Text, Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
        <Setter Property="LineHeight" Value="20"/>
    </Style>

    <Style x:Key="CaptionTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable Small, Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource TextTertiaryBrush}"/>
        <Setter Property="LineHeight" Value="16"/>
    </Style>

    <!-- Animation Resources -->
    <Storyboard x:Key="FadeInAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0" To="1" 
                         Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         From="0.95" To="1" 
                         Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         From="0.95" To="1" 
                         Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="HoverEnterAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         To="1.02" 
                         Duration="0:0:0.15">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         To="1.02" 
                         Duration="0:0:0.15">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="HoverExitAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         To="1" 
                         Duration="0:0:0.15">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         To="1" 
                         Duration="0:0:0.15">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="PressAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         To="0.98" 
                         Duration="0:0:0.1">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         To="0.98" 
                         Duration="0:0:0.1">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="ReleaseAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         To="1.02" 
                         Duration="0:0:0.1">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         To="1.02" 
                         Duration="0:0:0.1">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <!-- Fluent Button Style -->
    <Style x:Key="FluentButtonStyle" TargetType="Button">
        <Setter Property="FontFamily" Value="Segoe UI Variable Text, Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="Background" Value="{StaticResource AccentPrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="BackgroundBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                SnapsToDevicePixels="True">
                            <Border.Effect>
                                <DropShadowEffect Color="#000000"
                                                  BlurRadius="8"
                                                  ShadowDepth="2"
                                                  Opacity="0.3"/>
                            </Border.Effect>
                        </Border>
                        
                        <Border x:Name="HoverOverlay"
                                Background="White"
                                CornerRadius="4"
                                Opacity="0"/>
                        
                        <ContentPresenter x:Name="ContentPresenter"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverEnterAnimation}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverExitAnimation}"/>
                            </Trigger.ExitActions>
                            <Setter TargetName="HoverOverlay" Property="Opacity" Value="0.06"/>
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressAnimation}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ReleaseAnimation}"/>
                            </Trigger.ExitActions>
                            <Setter TargetName="HoverOverlay" Property="Opacity" Value="0.12"/>
                            <Setter TargetName="HoverOverlay" Property="Background" Value="Black"/>
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Primary Button Style -->
    <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource FluentButtonStyle}">
        <Setter Property="Background" Value="{StaticResource AccentPrimaryBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <!-- Success Button Style -->
    <Style x:Key="SuccessButtonStyle" TargetType="Button" BasedOn="{StaticResource FluentButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
    </Style>

    <!-- Secondary Button Style -->
    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource FluentButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- Acrylic Card Style -->
    <Style x:Key="AcrylicCardStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource AcrylicBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="24"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="#000000" 
                                  BlurRadius="16" 
                                  ShadowDepth="4" 
                                  Opacity="0.4"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Status Indicator Styles -->
    <Style x:Key="StatusRunningStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyLargeTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource SuccessBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="StatusStoppedStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyLargeTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource ErrorBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="StatusUnknownStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyLargeTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource WarningBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

</ResourceDictionary>